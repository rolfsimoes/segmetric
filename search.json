[{"path":"https://michellepicoli.github.io/segmetric/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rolf Simoes. Author. Alber Sanchez. Author. Michelle Picoli. Author, maintainer.","code":""},{"path":"https://michellepicoli.github.io/segmetric/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Simoes R, Sanchez , Picoli M C (2022). segmetric: Metrics Assessing Segmentation Accuracy Geospatial Data. R package version 0.3.0, <https://CRAN.R-project.org/package=segmetric>.","code":"@Manual{,   title = {segmetric: Metrics for Assessing Segmentation Accuracy for Geospatial Data},   author = {Rolf Simoes and Alber Sanchez and Michelle C A Picoli},   year = {2022},   note = {R package version 0.3.0},   url = {https://CRAN.R-project.org/package=segmetric}, }"},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"segmetric-","dir":"","previous_headings":"","what":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"Segmentation Assessment Metrics (segmetric) segmetric open source package provides set metrics analysis evaluation geospatial segmentation. implements 28 supervised metrics used literature spatial segmentation assessment (see References ).","code":""},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"","code":"# install via CRAN  install.packages(\"segmetric\")"},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"development-version","dir":"","previous_headings":"Installation","what":"Development version","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"install development version segmetric, run following commands","code":"# load necessary libraries library(devtools)  install_github(\"michellepicoli/segmetric\")"},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"Spatial datasets can loaded using sf objects. create segmetric object, use function sm_read(): Plot data using plot() command:  Segmentation metrics can computed function sm_compute(). Use summary() obtain overall metric (mean weighted mean). Make multiple calls compute metrics: see supported metrics, type ?metric_functions run:","code":"library(segmetric)  # load example datasets data(\"sample_ref_sf\", package = \"segmetric\") data(\"sample_seg_sf\", package = \"segmetric\")  # create segmetric object m <- sm_read(ref_sf = sample_ref_sf, seg_sf = sample_seg_sf) plot(m) # compute AFI metric and summarize it sm_compute(m, \"AFI\") %>% summary() #> [1] -0.007097452 # compute OS1, F_measure, and US2 metrics m <-    sm_compute(m, \"OS1\") %>%   sm_compute(\"F_measure\") %>%   sm_compute(\"US2\")  # summarize them summary(m) #>        OS1  F_measure        US2  #> 0.17341468 0.84728616 0.08617454 # list all supported metrics sm_list_metrics() #>  [1] \"AFI\"       \"D_index\"   \"Dice\"      \"E\"         \"ED3\"       \"F_measure\" #>  [7] \"Fitness\"   \"IoU\"       \"M\"         \"OI2\"       \"OMerging\"  \"OS1\"       #> [13] \"OS2\"       \"OS3\"       \"PI\"        \"precision\" \"qLoc\"      \"QR\"        #> [19] \"RAsub\"     \"RAsuper\"   \"recall\"    \"RPsub\"     \"RPsuper\"   \"SimSize\"   #> [25] \"UMerging\"  \"US1\"       \"US2\"       \"US3\""},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"getting-help","dir":"","previous_headings":"","what":"Getting Help","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"detailed documentation examples use function inside segmetric package can obtained typing ?segmetric R console.","code":""},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"how-to-contribute","dir":"","previous_headings":"","what":"How to contribute?","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"segmetric package implemented based extensible architecture. Feel free contribute implementing new metrics functions. Make project fork. Edit file R/metric-funs.R implementing new metric. Register metric .db_registry() function R/db.R file using sm_reg_metric(). Make Pull Request branch dev.","code":""},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"research supported European Research Council (ERC) European Union’s Horizon 2020 research innovation program (Grant agreement 677140 MIDLAND).","code":""},{"path":"https://michellepicoli.github.io/segmetric/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Metrics for Assessing Segmentation Accuracy for Geospatial Data","text":"Carleer, .P., Debeir, O., Wolff, E., 2005. Assessment high spatial resolution satellite image segmentations. Photogramm. Eng. Remote. Sens. 71, 1285-1294. http://dx.doi.org/10.14358/PERS.71.11.1285. Clinton, N., Holt, ., Scarborough, J., Yan, L., Gong, P., 2010. Accuracy assessment measures object-based image segmentation goodness. Photogramm. Eng. Remote. Sens. 76, pp. 289-299. Costa, G..O.P., Feitosa, R.Q., Cazes, T.B., Feijo, B., 2008. Genetic adaptation segmentation parameters. : Blaschke, T., Lang, S., Hay, G.J. (Eds.), Object-based Image Analysis. Springer Berlin Heidelberg, Berlin, Heidelberg, pp. 679-695. http://dx.doi.org/10.1007/978-3-540-77058-9_37. Dice, L.R., 1945. Measures amount ecologic association species. Ecology, 26(3), pp.297-302. Feitosa, R.Q., Ferreira, R.S., Almeida, C.M., Camargo, F.F., Costa, G..O.P., 2010. Similarity metrics genetic adaptation segmentation parameters. : 3rd International Conference Geographic Object-Based Image Analysis (GEOBIA 2010). International Archives Photogrammetry, Remote Sensing Spatial Information Sciences, Ghent. Jaccard, P., 1912. distribution flora alpine zone. New phytologist, 11(2), pp.37-50. http://dx.doi.org/10.1111/j.1469-8137.1912.tb05611.x Janssen, L.L.F., Molenaar, M., 1995. Terrain objects, dynamics monitoring integration GIS remote sensing. IEEE Trans. Geosci. Remote Sens. 33, pp. 749-758. http://dx.doi.org/10.1109/36.387590. Levine, M.D., Nazif, .M., 1982. experimental rule based system testing low level segmentation strategies. : Preston, K., Uhr, L. (Eds.), Multicomputers Image Processing: Algorithms Programs. Academic Press, New York, pp. 149-160. Lucieer, ., Stein, ., 2002. Existential uncertainty spatial objects segmented satellite sensor imagery. Geosci. Remote. Sens. IEEE Trans. 40, pp. 2518-2521. http://dx.doi.org/10.1109/TGRS.2002.805072. Moller, M., Lymburner, L., Volk, M., 2007. comparison index: tool assessing accuracy image segmentation. Int. J. Appl. Earth Obs. Geoinf. 9, pp. 311-321. http://dx.doi.org/10.1016/j.jag.2006.10.002. Persello, C., Bruzzone, L., 2010. novel protocol accuracy assessment classification high resolution images. IEEE Trans. Geosci. Remote Sens. 48, pp. 1232-1244. http://dx.doi.org/10.1109/TGRS.2009.2029570. Rezatofighi, H., Tsoi, N., Gwak, J., Sadeghian, ., Reid, ., Savarese, S., : Proceedings IEEE/CVF Conference Computer Vision Pattern Recognition (CVPR), pp. 658-666. Van Coillie, F.M.B., Verbeke, L.P.C., De Wulf, R.R., 2008. Semi-automated forest stand delineation using wavelet based segmentation high resolution optical imagery. : Object-Based Image Analysis: Spatial Concepts Knowledge-Driven Remote Sensing Applications, pp. 237-256. http://dx.doi.org/10.1007/978-3-540-77058-9_13. Van Rijsbergen, C.J., 1979. Information Retrieval. Butterworth-Heinemann, London. Weidner, U., 2008. Contribution assessment segmentation quality remote sensing applications. Int. Arch. Photogramm. Remote Sens. Spat. Inf. Sci. 37, pp. 479-484. Yang, J., Li, P., , Y., 2014. multi-band approach unsupervised scale parameter selection multi-scale image segmentation. ISPRS J. Photogramm. Remote Sens. 94, pp. 13-24. http://dx.doi.org/10.1016/j.isprsjprs.2014.04.008. Yang, J., , Y., Caspersen, J. P., Jones, T. ., 2017. Delineating Individual Tree Crowns Uneven-Aged, Mixed Broadleaf Forest Using Multispectral Watershed Segmentation Multiscale Fitting. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens., 10(4), pp. 1390-1401. http://dx.doi.org/10.1109/JSTARS.2016.2638822. Zhan, Q., Molenaar, M., Tempfli, K., Shi, W., 2005. Quality assessment geo‐spatial objects derived remotely sensed data. International Journal Remote Sensing, 26(14), pp.2953-2974. http://dx.doi.org/10.1080/01431160500057764. Zhang, X., Feng, X., Xiao, P., , G., Zhu, L., 2015a. Segmentation quality evaluation using region-based precision recall measures remote sensing images. ISPRS J. Photogramm. Remote Sens. 102, pp. 73-84. http://dx.doi.org/10.1016/j.isprsjprs.2015.01.009.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/db_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Database of metrics functions — db_functions","title":"Database of metrics functions — db_functions","text":"functions used register new metrics segmetric database. sm_list_metrics(): List registered metrics. sm_new_metric(): Create new metric entry registered database. sm_reg_metric(): Register new metric database. sm_unreg_metric(): Remove metric entry database. sm_desc_metric(): Describe metric registered database.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/db_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Database of metrics functions — db_functions","text":"","code":".db_list()  .db_set(key, value)  .db_del(key)  .db_get(key)  sm_list_metrics()  sm_new_metric(   fn,   fn_subset,   name = \"\",   optimal = 0,   summarizable = TRUE,   description = \"\",   reference = \"\" )  sm_reg_metric(metric_id, entry)  sm_unreg_metric(metric_id)  sm_desc_metric(metric_id)"},{"path":"https://michellepicoli.github.io/segmetric/reference/db_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Database of metrics functions — db_functions","text":"fn function receives segmetric object returns metric values. fn_subset function returns subset. name character containing metric name (Defaults \"\"). description character containing description metric (Defaults \"\"). reference character reference scientific literature describing metric. metric_id character value containing unique metric identification. entry metric_entry object returned new_metric() function.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/db_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Database of metrics functions — db_functions","text":"sm_list_metrics(): Return character vector supported metrics. sm_new_metric(): Return metric_entry object containing metric function (fn), name (name), description (description), reference (reference). sm_reg_metric(), sm_unreg_metric(): return value, called (un)register metric. sm_desc_metric(): return value, called print metric description.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/db_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Database of metrics functions — db_functions","text":"","code":"sm_reg_metric(     metric_id = \"Example\",     entry = sm_new_metric(         fn = function(m) {             sm_area(sm_ytilde(m)) /                  sm_area(sm_ref(m), order = sm_ytilde(m))         },         fn_subset = sm_ytilde,         name = \"Metric name example\",         description = paste(\"Values range from A to B.\",                             \"Optimal value is C\"),         reference = \"Author (Year)\"     ))  sm_desc_metric(\"Example\") #> * Example (Metric name example) #>   function (m)    {  #>       sm_area(sm_ytilde(m))/sm_area(sm_ref(m), order = sm_ytilde(m))   } #>   Values range from A to B. Optimal value is C #>   reference: Author (Year) sm_list_metrics() #>  [1] \"AFI\"       \"D_index\"   \"Dice\"      \"E\"         \"ED3\"       \"Example\"   #>  [7] \"F_measure\" \"Fitness\"   \"IoU\"       \"M\"         \"OI2\"       \"OMerging\"  #> [13] \"OS1\"       \"OS2\"       \"OS3\"       \"PI\"        \"QR\"        \"RAsub\"     #> [19] \"RAsuper\"   \"RPsub\"     \"RPsuper\"   \"SimSize\"   \"UMerging\"  \"US1\"       #> [25] \"US2\"       \"US3\"       \"precision\" \"qLoc\"      \"recall\""},{"path":"https://michellepicoli.github.io/segmetric/reference/general_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"General functions — general_functions","title":"General functions — general_functions","text":"functions manipulate segmetric objects. sm_area(): Return vector areas, one polygon. sm_centroid(): Return centroids given polygons. sm_intersection(): Return intersection given simple features. sm_subset_union(): Return union given simple features. sm_rbind(): Return merge unique simple features.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/general_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General functions — general_functions","text":"","code":"sm_area(s, order = NULL)  sm_centroid(s, order = NULL)  sm_distance(s1, s2)  sm_intersection(s1, s2, touches = TRUE)  sm_subset_union(s)  sm_rbind(...)  sm_apply_group(x, groups, fn, ...)  sm_summarize_group(x, groups, fn, ...)  sm_norm_left(x, y)  sm_norm_right(x, y)  sm_options(..., digits = NULL)"},{"path":"https://michellepicoli.github.io/segmetric/reference/general_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General functions — general_functions","text":"s, s1, s2 Either ref_sf, seg_sf, subset_sf object (inherited sf). order subset_sf. argument arranges returned values according object passed . touches logical. border part intersection? ... sm_rbind(), set subset_sf objects merged. x, y numeric values (e.g. areas, lengths) compute metrics.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/general_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General functions — general_functions","text":"sm_area(): Return numeric vector polygons' area. sm_centroid(): Return subset_sf object polygons' centroid. sm_intersection(): Return subset_sf object intersection polygons. sm_subset_union(): Return subset_sf object union intersecting polygons. sm_rbind(): Return subset_sf object unique features.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Metric functions — metric_functions","title":"Metric functions — metric_functions","text":"sm_compute() computes given metric (metric_id parameter) segmentation objects. compares reference segmentation polygons using metric. list supported metrics can obtained sm_list_metrics() (see Details information). sm_metric_subset() returns subset used compute metrics segmetric object.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Metric functions — metric_functions","text":"","code":"sm_compute(m, metric_id, ...)  sm_metric_subset(m, metric_id = NULL)"},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Metric functions — metric_functions","text":"m segmetric object. metric_id character vector metrics id computed. ... additional argument compute metric (see Details).","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Metric functions — metric_functions","text":"Return numeric vector computed metric.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Metric functions — metric_functions","text":"\"OS1\" refers Oversegmentation. values range 0 (optimal) 1 (Clinton et al., 2010). \"US1\" refers Undersegmentation. values range 0 (optimal) 1 (Clinton et al., 2010). \"OS2\" refers Oversegmentation. values range 0 (optimal) 1 (Persello Bruzzone, 2010). \"US2\" refers Undersegmentation. values range 0 (optimal) 1 (Persello Bruzzone, 2010). \"OS3\" refers Oversegmentation. values range 0 (optimal) 1 (Yang et al., 2014). \"US3\" refers Undersegmentation. values range 0 (optimal) 1 (Yang et al., 2014). \"AFI\" refers Area Fit Index. optimal value 0 (Lucieer Stein, 2002; Clinton et al., 2010). \"QR\" refers Quality Rate. values range 0 (optimal) 1 (Weidner, 2008; Clinton et al., 2010). \"D_index\" refers Index D. values range 0 (optimal) 1 (Levine Nazif, 1982; Clinton et al., 2010). \"precision\" refers Precision. values range 0 1 (optimal) (Van Rijsbergen, 1979; Zhang et al., 2015). \"recall\" refers Recall. values range 0 1 (optimal) (Van Rijsbergen, 1979; Zhang et al., 2015). \"UMerging\" refers Undermerging. values range 0 (optimal) 1 (Levine Nazif, 1982; Clinton et al., 2010). \"OMerging\" refers Overmerging. optimal value 0 (Levine Nazif, 1982; Clinton et al., 2010). \"M\" refers Match. values range 0 1 (optimal) (Janssen Molenaar, 1995; Feitosa et al., 2010). \"E\" refers Evaluation Measure. values range 0 (optimal) 100 (Carleer et al., 2005). \"RAsub\" refers Relative Area. values range 0 1 (optimal) (Müller et al., 2007; Clinton et al., 2010). \"RAsuper\" refers Relative area. values range 0 1 (optimal) (Müller et al., 2007; Clinton et al., 2010). \"PI\" refers Purity Index. values range 0 1 (optimal) (van Coillie et al., 2008). \"Fitness\" refers Fitness Function. optimal value 0 (Costa et al., 2008). \"ED3\" refers Euclidean Distance. values range 0 (optimal) 1 (Yang et al., 2014). \"F_measure\" refers F-measure metric. values range 0 1 (optimal) (Van Rijsbergen, 1979; Zhang et al., 2015). takes optional weight argument alpha, ranging 0.0 1.0 (default 0.5). \"IoU\" refers Intersection Union metric. values range 0 1 (optimal) (Jaccard, 1912; Rezatofighi et al., 2019). \"SimSize\" refers similarity size metric. values range 0 1 (optimal) (Zhan et al., 2005). \"qLoc\"refers quality object’s location metric. optimal value 0 (Zhan et al., 2005). \"RPsub\" refers Relative Position (sub) metric. Optimal value 0 (Möller et al., 2007, Clinton et al., 2010). \"RPsuper\" refers Relative Position (super) metric. values range 0 (optimal) 1 (Möller et al., 2007, Clinton et al., 2010). \"OI2 refers Overlap Index metric. values range 0 1 (optimal) (Yang et al., 2017).","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Metric functions — metric_functions","text":"complete list cited references available ?segmetric.","code":""},{"path":[]},{"path":"https://michellepicoli.github.io/segmetric/reference/metric_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Metric functions — metric_functions","text":"","code":"# load sample datasets data(\"sample_ref_sf\", package = \"segmetric\") data(\"sample_seg_sf\", package = \"segmetric\")  # create segmetric object m <- sm_read(ref_sf = sample_ref_sf, seg_sf = sample_seg_sf)  # compute AFI metric and summarize it sm_compute(m, \"AFI\") %>% summary() #> [1] -0.007097452  # compute three metrics and summarize them sm_compute(m, c(\"AFI\", \"OS1\", \"US2\")) %>% summary() #>          AFI          OS1          US2  #> -0.007097452  0.173414677  0.086174537   # compute OS1, F_measure, and US2 metrics using pipe m <- sm_compute(m, \"OS1\") %>%   sm_compute(\"F_measure\") %>%   sm_compute(\"US2\")  # summarize them summary(m) #>        OS1  F_measure        US2  #> 0.17341468 0.84728616 0.08617454"},{"path":"https://michellepicoli.github.io/segmetric/reference/plot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot function — plot","title":"Plot function — plot","text":"Plot segmetric map according parameter type: \"base\": simple plot reference segmentation polygons; \"subset\": plot polygons subset base plot; \"choropleth\": plot choropleth map polygons subset using metric values.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/plot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot function — plot","text":"","code":"# S3 method for segmetric plot(   x,   type = \"base\",   ...,   title = NULL,   layers = c(\"ref_sf\", \"seg_sf\"),   background = \"#FFFFFF\",   ref_color = \"#FF00009F\",   ref_fill = \"#FFFFFF00\",   ref_label = \"reference\",   ref_size = 2,   ref_symbol = 2,   seg_color = \"#0000009F\",   seg_fill = \"#FFFFFF00\",   seg_label = \"segment\",   seg_size = 1,   seg_symbol = 3,   selected_fill = \"#9A9AFF50\",   plot_centroids = TRUE,   centroids_color = \"#000000FF\",   centroids_label = \"centroid\",   subset_id = NULL,   subset_color = \"#FFFFFF00\",   subset_fill = \"#F0E4167F\",   metric_id = NULL,   break_style = \"jenks\",   choropleth_palette = \"YlGnBu\",   choropleth_size = 0.1,   plot_extent = NULL,   plot_legend = TRUE,   plot_axes = TRUE )"},{"path":"https://michellepicoli.github.io/segmetric/reference/plot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot function — plot","text":"x segmetric object. type character. Either \"base\", \"subset\", \"choropleth\". ... Ignored. title character plot title layers character. One \"ref_sf\" \"seg_sf\" (works type = \"base\" type = \"subset\"). ref_color, seg_color, ref_fill, seg_fill character valid hexadecimal color rgb rgba format. Set border fill colors reference segmentation polygons. ref_label, seg_label, centroids_label character legend labels reference polygons, segmentation polygons, centroids. ref_size, seg_size numeric. Set symbol's size centroids. ref_symbol, seg_symbol integer. Symbol represent polygons' centroids (see pch param points). selected_fill character valid hexadecimal color rgb rgba format. Set fill color selected reference segmentation polygons depending subset_id. plot_centroids logical. Plot centroids . centroids_color character valid hexadecimal color rgb rgba format. Set border colors centroids. subset_id character subset name (required type = \"subset\") subset_color, subset_fill character valid hexadecimal color rgb rgba format. Set border fill colors subset polygons (works type = \"subset\"). metric_id character metric plotted choropleth maps (required type = \"choropleth\") break_style character name method compute intervals choropleth maps. Can one \"sd\", \"equal\", \"pretty\", \"quantile\", \"kmeans\", \"hclust\", \"bclust\", \"fisher\", \"jenks\", \"dpih\", \"headtails\" (see style parameter classIntervals). plot_extent sf object. Set map extent plot. plot_legend logical. Plot legend . plot_axes logical. Plot coordinates axis .","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. magrittr %>%","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"LEM+ dataset — ref_sf","title":"LEM+ dataset — ref_sf","text":"ref_sf: dataset containing field boundaries Luiz Eduardo Magalhaes municipality, Brazil. data covers following extent: xmin: -46.37683 ymin: -12.34579 xmax: -46.15776 ymax: -12.13663 CRS: EPSG:4326 sample_ref_sf: subset ref_sf dataset.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"LEM+ dataset — ref_sf","text":"","code":"ref_sf  sample_ref_sf"},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"LEM+ dataset — ref_sf","text":"datasets objects class sf (inherited tbl_df, tbl, data.frame) 2 variables: id: identification geometry: polygons ref_sf: dataset 195 features. sample_ref_sf: dataset 5 features.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"LEM+ dataset — ref_sf","text":"Oldoni et al. (2020) doi:10.1016/j.dib.2020.106553 .","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"LEM+ dataset — ref_sf","text":"Oldoni, L.V., Sanches, .D.., Picoli, M.C.., Covre, R.M. Fronza, J.G., 2020. LEM+ dataset: agricultural remote sensing applications. Data Brief, 33, p.106553.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/ref_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"LEM+ dataset — ref_sf","text":"","code":"data(\"ref_sf\", package = \"segmetric\") data(\"sample_ref_sf\", package = \"segmetric\")"},{"path":"https://michellepicoli.github.io/segmetric/reference/seg_sf.html","id":null,"dir":"Reference","previous_headings":"","what":"Segmentation dataset — seg_sf","title":"Segmentation dataset — seg_sf","text":"seg200_sf,seg500_sf,seg800_sf,seg1000_sf: dataset containing segments generated PlanetScope image, level 3B, acquired Feb 18, 2020, 3.7-meter resolution (Planet Team, 2017), using multiresolution segmentation method (Baatz Schape, 2000). data covers approximately area LEM+ dataset (see ref_sf). data post-processed using spectral difference algorithm band 3. polygons simplified using Douglas-Peucker algorithm QGIS. Self-intersections removed using SAGA's Polygon Self-Intersection. Segmentation parameters: scale parameter: 200 (seg200_sf), 500 (seg500_sf), 800 (seg800_sf), 1000 (seg1000_sf) shape: 0.9 compactness: 0.1 Spectral difference parameters: spectral difference: 20 Simplification parameter: distance: 10-meters polygons intersecting reference data area-perimeter ratio 25 selected. sample_seg_sf: subset seg_sf dataset.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/seg_sf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Segmentation dataset — seg_sf","text":"","code":"seg200_sf  seg500_sf  seg800_sf  seg1000_sf  sample_seg_sf"},{"path":"https://michellepicoli.github.io/segmetric/reference/seg_sf.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Segmentation dataset — seg_sf","text":"datasets objects class sf (inherited tbl_df, tbl, data.frame) 2 variables: id: identification geometry: polygons seg200_sf: dataset 547 features. seg500_sf: dataset 215 features. seg800_sf: dataset 169 features. seg1000_sf: dataset 158 features. object class sf (inherits tbl_df, tbl, data.frame) 215 rows 2 columns. object class sf (inherits tbl_df, tbl, data.frame) 169 rows 2 columns. object class sf (inherits tbl_df, tbl, data.frame) 158 rows 2 columns. sample_seg_sf: dataset 6 features extracted seg500_sf dataset.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/seg_sf.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Segmentation dataset — seg_sf","text":"Planet Team, 2017. Planet Application Program Interface: Space Life Earth. San Francisco, CA. https://api.planet.com Baatz, M., Schape, ., 2000. Multiresolution segmentation - optimization approach high quality multi-scale image segmentation. : Strobl, J., Blaschke, T., Griesebner, G. (Eds.), Angewandte Geographische Informations-Verarbeitung XII. Wichmann Verlag, Karlsruhe, Germany, pp. 12-23. <>","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/seg_sf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Segmentation dataset — seg_sf","text":"","code":"data(\"seg200_sf\", package = \"segmetric\") data(\"seg500_sf\", package = \"segmetric\") data(\"seg800_sf\", package = \"segmetric\") data(\"seg1000_sf\", package = \"segmetric\") data(\"sample_seg_sf\", package = \"segmetric\")"},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":null,"dir":"Reference","previous_headings":"","what":"segmetric — segmetric-package","title":"segmetric — segmetric-package","text":"Metrics assessing segmentation accuracy geospatial data.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":"purpose","dir":"Reference","previous_headings":"","what":"Purpose","title":"segmetric — segmetric-package","text":"segmetric package provides set metrics segmentation accuracy assessment (evaluation) geospatial data. includes 20 metrics used literature spatial segmentation assessment (Van Rijsbergen, 1979; Levine Nazif, 1982; Janssen Molenaar, 1995; Lucieer Stein, 2002; Carleer et al., 2005; Moller et al., 2007; van Coillie et al., 2008; Costa et al., 2008; Weidner, 2008; Feitosa et al., 2010; Clinton et al. 2010; Persello Bruzzone, 2010; Yang et al., 2014; Zhang et al., 2015).","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":"extensions","dir":"Reference","previous_headings":"","what":"Extensions","title":"segmetric — segmetric-package","text":"segmetric package extensible provides set functions ease implementation new metrics. See ?sm_reg_metric() find new metrics implemented.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":"contributions","dir":"Reference","previous_headings":"","what":"Contributions","title":"segmetric — segmetric-package","text":"Contribution package done segmetric's page GitHub: https://github.com/michellepicoli/segmetric.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"segmetric — segmetric-package","text":"Carleer, .P., Debeir, O., Wolff, E., 2005. Assessment high spatial resolution satellite image segmentations. Photogramm. Eng. Remote. Sens. 71, 1285-1294. doi:10.14358/PERS.71.11.1285 . Clinton, N., Holt, ., Scarborough, J., Yan, L., Gong, P., 2010. Accuracy assessment measures object-based image segmentation goodness. Photogramm. Eng. Remote. Sens. 76, pp. 289-299. Costa, G..O.P., Feitosa, R.Q., Cazes, T.B., Feijo, B., 2008. Genetic adaptation segmentation parameters. : Blaschke, T., Lang, S., Hay, G.J. (Eds.), Object-based Image Analysis. Springer Berlin Heidelberg, Berlin, Heidelberg, pp. 679-695. doi:10.1007/978-3-540-77058-9_37 . Dice, L.R., 1945. Measures amount ecologic association species. Ecology, 26(3), pp.297-302. Feitosa, R.Q., Ferreira, R.S., Almeida, C.M., Camargo, F.F., Costa, G..O.P., 2010. Similarity metrics genetic adaptation segmentation parameters. : 3rd International Conference Geographic Object-Based Image Analysis (GEOBIA 2010). International Archives Photogrammetry, Remote Sensing Spatial Information Sciences, Ghent. Jaccard, P., 1912. distribution flora alpine zone. New phytologist, 11(2), pp.37-50. doi:10.1111/j.1469-8137.1912.tb05611.x Janssen, L.L.F., Molenaar, M., 1995. Terrain objects, dynamics monitoring integration GIS remote sensing. IEEE Trans. Geosci. Remote Sens. 33, pp. 749-758. doi:10.1109/36.387590 . Levine, M.D., Nazif, .M., 1982. experimental rule based system testing low level segmentation strategies. : Preston, K., Uhr, L. (Eds.), Multicomputers Image Processing: Algorithms Programs. Academic Press, New York, pp. 149-160. Lucieer, ., Stein, ., 2002. Existential uncertainty spatial objects segmented satellite sensor imagery. Geosci. Remote. Sens. IEEE Trans. 40, pp. 2518-2521. doi:10.1109/TGRS.2002.805072 . Möller, M., Lymburner, L., Volk, M., 2007. comparison index: tool assessing accuracy image segmentation. Int. J. Appl. Earth Obs. Geoinf. 9, pp. 311-321. doi:10.1016/j.jag.2006.10.002 . Persello, C., Bruzzone, L., 2010. novel protocol accuracy assessment classification high resolution images. IEEE Trans. Geosci. Remote Sens. 48, pp. 1232-1244. doi:10.1109/TGRS.2009.2029570 . Rezatofighi, H., Tsoi, N., Gwak, J., Sadeghian, ., Reid, ., Savarese, S., : Proceedings IEEE/CVF Conference Computer Vision Pattern Recognition (CVPR), pp. 658-666. Van Coillie, F.M.B., Verbeke, L.P.C., De Wulf, R.R., 2008. Semi-automated forest stand delineation using wavelet based segmentation high resolution optical imagery. : Object-Based Image Analysis: Spatial Concepts Knowledge-Driven Remote Sensing Applications, pp. 237-256. doi:10.1007/978-3-540-77058-9_13 . Van Rijsbergen, C.J., 1979. Information Retrieval. Butterworth-Heinemann, London. Weidner, U., 2008. Contribution assessment segmentation quality remote sensing applications. : Proceedings 21st Congress International Society Photogrammetry Remote Sensing, 03–11 July, Beijing, China. Vol. XXXVII. Part B7, pp. 479-484. Yang, J., Li, P., , Y., 2014. multi-band approach unsupervised scale parameter selection multi-scale image segmentation. ISPRS J. Photogramm. Remote Sens. 94, pp. 13-24. doi:10.1016/j.isprsjprs.2014.04.008 . Yang, J., , Y., Caspersen, J. P., Jones, T. ., 2017. Delineating Individual Tree Crowns Uneven-Aged, Mixed Broadleaf Forest Using Multispectral Watershed Segmentation Multiscale Fitting. IEEE J. Sel. Top. Appl. Earth Obs. Remote Sens., 10(4), pp. 1390-1401. doi:10.1109/JSTARS.2016.2638822 . Zhan, Q., Molenaar, M., Tempfli, K., Shi, W., 2005. Quality assessment geo‐spatial objects derived remotely sensed data. International Journal Remote Sensing, 26(14), pp.2953-2974. doi:10.1080/01431160500057764 Zhang, X., Feng, X., Xiao, P., , G., Zhu, L., 2015a. Segmentation quality evaluation using region-based precision recall measures remote sensing images. ISPRS J. Photogramm. Remote Sens. 102, pp. 73-84. doi:10.1016/j.isprsjprs.2015.01.009 .","code":""},{"path":[]},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"segmetric — segmetric-package","text":"Maintainer: Michelle Picoli mipicoli@gmail.com (ORCID) Authors: Rolf Simoes rolfsimoes@gmail.com (ORCID) Alber Sanchez albhasan@gmail.com (ORCID)","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"General functions — segmetric_functions","title":"General functions — segmetric_functions","text":"functions manipulate segmetric objects. sm_read(): Load reference segmentation polygons segmetric. sm_clear(): Remove already calculated metrics segmetric. print(): Print segmetric object. plot(): Plot reference segmentation polygons. summary(): Compute measure central tendency values metric. sm_is_empty(): Check segmetric object empty.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"General functions — segmetric_functions","text":"","code":".segmetric_check(m)  .segmetric_env(m)  sm_read(ref_sf, seg_sf)  sm_clear(m)  # S3 method for segmetric summary(object, weight = NULL, na_rm = TRUE, ...)  sm_is_empty(m)  # S3 method for segmetric [(x, i)"},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"General functions — segmetric_functions","text":"m segmetric object. ref_sf sf object. reference polygons. seg_sf sf object. segmentation polygons. object segmetric object. weight Weights summarize metrics. Accepts character options \"ref\", \"seg\", \"inter\", weights using reference, segment, intersection areas, respectively. Also accepts numeric vector weights length input metrics giving weights used. na_rm missing values (including NaN) removed? ... Additional parameters (implemented).","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"General functions — segmetric_functions","text":"sm_read(), sm_clear(): Return segmetric object containing empty list environment attribute store necessary datasets. sm_is_empty(): Return logical vector indicating computed metric empty.","code":""},{"path":[]},{"path":"https://michellepicoli.github.io/segmetric/reference/segmetric_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"General functions — segmetric_functions","text":"","code":"# load sample datasets data(\"sample_ref_sf\", package = \"segmetric\") data(\"sample_seg_sf\", package = \"segmetric\")  # create segmetric object m <- sm_read(ref_sf = sample_ref_sf, seg_sf = sample_seg_sf)  # plot geometries plot(m)   # compute a metric sm_compute(m, \"AFI\") #> $AFI #> [1] -0.004579302 -0.177491523 -0.065702379 -0.178723482  0.391009428 #>   # summarize the metric using mean sm_compute(m, \"AFI\") %>% summary() #> [1] -0.007097452  # clear computed subsets sm_clear(m) #> list()"},{"path":"https://michellepicoli.github.io/segmetric/reference/set_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Set functions — set_functions","title":"Set functions — set_functions","text":"functions compute subsets required calculate segmentation metrics described Clinton et al. (2010) Costa et al. (2017). sm_ref()    returns set \\(n\\) polygons reference, represented \\(X = \\{x_{}: = 1, ....., n\\}\\) sm_seg()    returns set \\(m\\) segmentation polygons, represented \\(Y = \\{y_{j}: j = 1, ....., m\\}\\) sm_ytilde() returns \\(\\tilde{Y}_{}\\), subset \\(Y\\), \\(\\tilde{Y}_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) \\neq 0\\}\\) sm_xtilde() returns \\(\\tilde{X}_{j}\\), subset \\(X\\), \\(\\tilde{X}_{j} = \\{x_{}: \\rm{area}(y_{j} \\cap x_{}) \\neq 0\\}\\) sm_yprime() returns \\(Y'_{}\\), subset \\(Y\\), \\(Y'_{} = \\{y_{j}: max(\\rm{area}(x_{} \\cap y_{j}))\\}\\) sm_xprime() returns \\(X'_{j}\\), subset \\(X\\), \\(X'_{j} = \\{x_{}: max(\\rm{area}(y_{j} \\cap x_{}))\\}\\) sm_ya()     returns \\(Y\\!a_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!a_{} = \\{y_{j}: \\rm{centroid}(x_{}) \\:\\rm{}\\: y_{j}\\}\\) sm_yb()     returns \\(Y\\!b_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!b_{} = \\{y_{j}: \\rm{centroid}(y_{j}) \\:\\rm{}\\: x_{}\\}\\) sm_yc()     returns \\(Y\\!c_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!c_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) /  \\rm{area}(y_{j}) > 0.5\\}\\) sm_yd()     returns \\(Y\\!d_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!d_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) / \\rm{area}(x_{}) > 0.5\\}\\) sm_ystar()  returns \\({Y}^{*}_{}\\), \\({Y}^{*}_{} = Y\\!a_{} \\cup Y\\!b_{} \\cup Y\\!c_{} \\cup Y\\!c_{}\\) sm_ycd()    returns \\(Y\\!cd_{}\\), \\(Y\\!cd_{} = Y\\!c_{} \\cup Y\\!d_{}\\) sm_ye()     returns \\(Y\\!e_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!e_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) / \\rm{area}(y_{j}) = 1\\}\\) sm_yf()     returns \\(Y\\!f_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!f_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) / \\rm{area}(y_{j}) > 0.55\\}\\) sm_yg()     returns \\(Y\\!g_{}\\), subset \\(\\tilde{Y}_{}\\), \\(Y\\!g_{} = \\{y_{j}: \\rm{area}(x_{} \\cap y_{j}) / \\rm{area}(y_{j}) > 0.75\\}\\)","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/set_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set functions — set_functions","text":"","code":"sm_ytilde(m)  sm_xtilde(m)  sm_yprime(m)  sm_xprime(m)  sm_ya(m)  sm_yb(m)  sm_yc(m)  sm_yd(m)  sm_ystar(m)  sm_ycd(m)  sm_ye(m)  sm_yf(m)  sm_yg(m)"},{"path":"https://michellepicoli.github.io/segmetric/reference/set_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set functions — set_functions","text":"m segmetric object.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/set_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set functions — set_functions","text":"sm_ref(): Return object class ref_sf (inherited sf) containing identification (ref_id) geometry (geometry) columns. sm_seg(): Return object class seg_sf (inherited sf) containing identification (seg_id) geometry (geometry) columns. sm_ytilde(), sm_xtilde(), sm_yprime(), sm_xprime(), sm_ya(), sm_yb(), sm_yc(), sm_yd(), sm_ystar(), sm_ycd(), sm_ye(), sm_yf(), sm_yg(): Return object class subset_sf (inherited sf) containing identification (ref_id seg_id), geometry (geometry) columns.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/set_functions.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Set functions — set_functions","text":"Clinton, N., Holt, ., Scarborough, J., Yan, L., & Gong, P. (2010). Accuracy Assessment Measures Object-based Image Segmentation Goodness. Photogrammetric Engineering & Remote Sensing, 76(3), 289–299. doi:10.14358/PERS.76.3.289 . Costa, H., Foody, G. M., & Boyd, D. S. (2018). Supervised methods image segmentation accuracy assessment land cover mapping. Remote Sensing Environment, 205(December 2017), 338–351. doi:10.1016/j.rse.2017.11.024 .","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/subset_handling_functions.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset handling functions — subset_handling_functions","title":"Subset handling functions — subset_handling_functions","text":"functions intended used new metric extensions. handle subset_sf data (inherited sf class) stored segmetric objects. sm_list() lists subsets already computed stored segmetric object. sm_exists() verifies subset_id exists segmetric object. sm_subset() evaluates stores subset_sf object. sm_indirect() finds subset_id given subset_sf object stored segmetric object. sm_segmetric() returns segmetric object stores given subset object (either ref_sf, seg_sf, subset_sf). sm_get() retrieves subset_sf object stored segmetric object. sm_inset() operator equivalent inner join returns objects s1, corresponding row s2 parameter return_index TRUE. sm_group_by(): Apply function groups subset_sf.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/subset_handling_functions.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset handling functions — subset_handling_functions","text":"","code":"sm_list(m)  sm_exists(m, subset_id)  sm_subset(m, subset_id, expr = NULL)  sm_indirect(s)  sm_segmetric(s)  sm_get(m, subset_id)  sm_ref(m)  sm_seg(m)  sm_inset(s1, s2, return_index = FALSE)  # S3 method for ref_sf sm_inset(s1, s2, return_index = FALSE)  # S3 method for seg_sf sm_inset(s1, s2, return_index = FALSE)  # S3 method for subset_sf sm_inset(s1, s2, return_index = FALSE)  sm_group_by(s, by, fn, ...)"},{"path":"https://michellepicoli.github.io/segmetric/reference/subset_handling_functions.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset handling functions — subset_handling_functions","text":"m segmetric object. subset_id character value informing subset name. expr valid piece code R inside curly braces. code evaluated generate subset. s, s1, s2 Either ref_sf, seg_sf, subset_sf object. return_index logical value indicating corresponding rows s1 returned instead actual corresponding values s2. character value column group. fn function apply group. ... sm_group_by(), extra parameter pass fn function.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/subset_handling_functions.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset handling functions — subset_handling_functions","text":"sm_list(): Return character vector names subsets stored segmetric object. sm_exists(): Return logical value indicating given subset name stored segmetric object. sm_subset(): Return subset_sf object. sm_indirect(): Return subset name given subset_sf object stored segmetric object. sm_segmetric(): Return segmetric object stores given subset_sf object. sm_get(): Return subset_sf object stored segmetric object. sm_inset(): Return either subset_sf object integer vector index corresponding rows s2 object. sm_group_by(): Return subset_sf object.","code":""},{"path":"https://michellepicoli.github.io/segmetric/reference/subset_handling_functions.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset handling functions — subset_handling_functions","text":"","code":"# load sample datasets data(\"sample_ref_sf\", package = \"segmetric\") data(\"sample_seg_sf\", package = \"segmetric\")  # create segmetric object m <- sm_read(ref_sf = sample_ref_sf, seg_sf = sample_seg_sf)  # lists only 'ref_sf' and 'seg_sf' sm_list(m) #> [1] \"ref_sf\" \"seg_sf\"  # computes 'Y_tilde' subset and stores it as 'test_subset' subset id # sm_ytilde(m) also stores a subset under 'Y_tilde' id s <- sm_subset(m, \"test_subset\", sm_ytilde(m))  # lists 'ref_sf', 'seg_sf', 'test_subset', and 'Y_tilde' sm_list(m) #> [1] \"Y_tilde\"     \"ref_sf\"      \"seg_sf\"      \"test_subset\"  # which segmetric object stores `s` subset? m2 <- sm_segmetric(s)  # m is identical to m2 identical(m, m2) #> [1] TRUE  # which name `s` subset is stored in `m` segmetric object? sm_indirect(s) #> [1] \"test_subset\"  # retrieve 'test_subset' data from `m` object s2 <- sm_get(m, 'test_subset')  # s is identical to s2 identical(s, s2) #> [1] TRUE"}]
